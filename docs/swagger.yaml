definitions:
  routes.hashResponse:
    properties:
      hash:
        type: string
    type: object
info:
  contact: {}
paths:
  /hash/cinemark:
    get:
      description: Get the hash of the Cinemark movies. Used by the iFrames to check
        updates and reload the iframe.
      parameters:
      - description: City to get movies from. First, check if the Cinemark site has
          a page for this city, if it doesn't, it'll return the page of São Paulo
          by default. Go to https://cinemark.com.br/rio-de-janeiro/filmes/em-cartaz
          and select your city. Then grab the city name on the URL.
        example: sao-paulo
        in: query
        name: city
        required: true
        type: string
      - description: Thaters' IDs to get movies from. You can find the filter keywords
          by going to your city page, like https://cinemark.com.br/sao-paulo/filmes/em-cartaz,
          clicking to filter by theater, and then grabbing the filters in the URL.
          The filter is the theaters' IDs separated by **%2C**. For example, in the
          URL https://cinemark.com.br/sao-paulo/filmes/em-cartaz?cinema=716%2C690%2C699
          we have the IDs 716, 690, and 699. You have to pass the text `716%2C690%2C699`
          to the API!
        example: 716%2C690%2C699
        in: query
        name: theaters
        type: string
      - description: Limits the number of items in the iFrame.
        example: 5
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.hashResponse'
      summary: Get the hash of the Cinemark movies
  /hash/linkwarden:
    get:
      description: Get the hash of the Linkwarden bookmarks. Used by the iFrames to
        check updates and reload the iframe.
      parameters:
      - description: Get bookmarks only from this collection. You can get the collection
          ID by going to the collection page. The ID should be on the URL. The ID
          of the default collection **Unorganized** is 1 because the URL is https://domain.com/collections/1.
        example: 1
        in: query
        name: collectionId
        type: integer
      - description: Limits the number of items in the iFrame.
        example: 5
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.hashResponse'
      summary: Get the hash of the Linkwarden bookmarks
  /hash/uptimekuma:
    get:
      description: Get the hash of the Uptime Kuma sites status. Used by the iFrames
        to check updates and reload the iframe.
      parameters:
      - description: You need to create a status page in Uptime Kuma and select which
          sites/services this status page will show. While creating the status page,
          it'll request **you** to create a slug, after creating the status page,
          provide this slug here. This iFrame will show data only of the sites/services
          of this specific status page!
        example: uptime-kuma-slug
        in: query
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.hashResponse'
      summary: Get the hash of the Uptime Kuma sites status
  /hash/vikunja:
    get:
      description: Get the hash of the Vikunja tasks. Used by the iFrames to check
        updates and reload the iframe.
      parameters:
      - description: Limits the number of items in the iFrame.
        example: 5
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.hashResponse'
      summary: Get the hash of the Vikunja tasks
  /health:
    get:
      description: Returns status OK
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health check route
  /iframe/cinemark:
    get:
      description: Returns an iFrame with the Cinemark movies in theaters for a city
        from Brazil.
      parameters:
      - description: City to get movies from. First, check if the Cinemark site has
          a page for this city, if it doesn't, it'll return the page of São Paulo
          by default. Go to https://cinemark.com.br/rio-de-janeiro/filmes/em-cartaz
          and select your city. Then grab the city name on the URL.
        example: sao-paulo
        in: query
        name: city
        required: true
        type: string
      - description: Thaters' IDs to get movies from. You can find the filter keywords
          by going to your city page, like https://cinemark.com.br/sao-paulo/filmes/em-cartaz,
          clicking to filter by theater, and then grabbing the filters in the URL.
          The filter is the theaters' IDs separated by **%2C**. For example, in the
          URL https://cinemark.com.br/sao-paulo/filmes/em-cartaz?cinema=716%2C690%2C699
          we have the IDs 716, 690, and 699. You have to pass the text `716%2C690%2C699`
          to the API!
        example: 716%2C690%2C699
        in: query
        name: theaters
        type: string
      - description: Homarr theme, defaults to light. If it's different from your
          Homarr theme, the background turns white
        example: light
        in: query
        name: theme
        type: string
      - description: Limits the number of items in the iFrame.
        example: 5
        in: query
        name: limit
        type: integer
      - description: API URL used by your browser. Use by the iFrames to check any
          update, if there is an update, the iFrame reloads. If not specified, the
          iFrames will never try to reload.
        example: https://sub.domain.com
        in: query
        name: api_url
        required: true
        type: string
      produces:
      - text/html
      responses:
        "200":
          description: HTML content
          schema:
            type: string
      summary: Cinemark Brazil iFrame
  /iframe/linkwarden:
    get:
      description: Returns an iFrame with Linkwarden bookmarks.
      parameters:
      - description: Get bookmarks only from this collection. You can get the collection
          ID by going to the collection page. The ID should be on the URL. The ID
          of the default collection **Unorganized** is 1 because the URL is https://domain.com/collections/1.
        example: 1
        in: query
        name: collectionId
        type: integer
      - description: Homarr theme, defaults to light. If it's different from your
          Homarr theme, the background turns white
        example: light
        in: query
        name: theme
        type: string
      - description: Limits the number of items in the iFrame.
        example: 5
        in: query
        name: limit
        type: integer
      - description: API URL used by your browser. Use by the iFrames to check any
          update, if there is an update, the iFrame reloads. If not specified, the
          iFrames will never try to reload.
        example: https://sub.domain.com
        in: query
        name: api_url
        required: true
        type: string
      produces:
      - text/html
      responses:
        "200":
          description: HTML content
          schema:
            type: string
      summary: Linkwarden  bookmarks iFrame
  /iframe/uptimekuma:
    get:
      description: Returns an iFrame with Uptime Kuma sites overview.
      parameters:
      - description: You need to create a status page in Uptime Kuma and select which
          sites/services this status page will show. While creating the status page,
          it'll request **you** to create a slug, after creating the status page,
          provide this slug here. This iFrame will show data only of the sites/services
          of this specific status page!
        example: uptime-kuma-slug
        in: query
        name: slug
        required: true
        type: string
      - description: Homarr theme, defaults to light. If it's different from your
          Homarr theme, the background turns white
        example: light
        in: query
        name: theme
        type: string
      - description: API URL used by your browser. Use by the iFrames to check any
          update, if there is an update, the iFrame reloads. If not specified, the
          iFrames will never try to reload.
        example: https://sub.domain.com
        in: query
        name: api_url
        required: true
        type: string
      produces:
      - text/html
      responses:
        "200":
          description: HTML content
          schema:
            type: string
      summary: Uptime Kuma iFrame
  /iframe/vikunja:
    get:
      description: Returns an iFrame with Vikunja tasks.
      parameters:
      - description: Homarr theme, defaults to light. If it's different from your
          Homarr theme, the background turns white
        example: light
        in: query
        name: theme
        type: string
      - description: Limits the number of items in the iFrame.
        example: 5
        in: query
        name: limit
        type: integer
      - description: API URL used by your browser. Use by the iFrames to check any
          update, if there is an update, the iFrame reloads. If not specified, the
          iFrames will never try to reload.
        example: https://sub.domain.com
        in: query
        name: api_url
        required: true
        type: string
      produces:
      - text/html
      responses:
        "200":
          description: HTML content
          schema:
            type: string
      summary: Vikunja tasks iFrame
swagger: "2.0"
